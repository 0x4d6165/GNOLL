{
  "dice_tower/test_dicerolls.py::test_language_independant_dice": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_arithmetic.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_clamping.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_conditionals.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_conditions.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_count_successes.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_custom_dice.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_explosions.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_groups.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_rerolling.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_strings.csv]": true,
  "dice_tower/test_dicerolls.py::test_language_independant_dice[test_subsets.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[ 14]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[ 2]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[3d20-4h]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[3d20r- 3- 60-test_rerolling.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[3d20r- 3- 60]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case13]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case14]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case15]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case17]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case18]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case19]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case2]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case36]": true,
  "dice_tower/tests/test_dicerolls.py::test_bad_dice_rolls[test_case37]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[ 1]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[ 4]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[(d4,2)k- \"1\"- \"4\"-test_groups.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[(d4,2)k- \"1\"- \"4\"]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[(d4x2)k- \"1\"- \"4\"-test_groups.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[(d4x2)k- \"1\"- \"4\"]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[100dFcs- 0- 100-test_count_successes.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[100dFcs- 0- 100]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[100dFf- 0- 100-test_count_successes.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[100dFf- 0- 100]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[100dFs- 0- 100-test_count_successes.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[100dFs- 0- 100]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[2d20-h- 1- 20]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[2d20-l- 1- 20]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[2d4!p- 1- 20]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[2dF-l- '-'- '+']": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[2dFkl- '-'- '+'-test_subsets.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[2dFkl- '-'- '+']": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20-2h- 1- 20]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20-2l- 1- 20]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<15- 3- 60-test_rerolling.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<15- 3- 60]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<16cs>15- 2- 13-test_count_successes.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<16cs>15- 2- 13]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<16f>15- 2- 13-test_count_successes.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<16f>15- 2- 13]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<16s>15- 2- 13-test_count_successes.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr<16s>15- 2- 13]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr==10- 3- 60-test_rerolling.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[3d20rr==10- 3- 60]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d20![d12,d10,d8,d6,d4]- 1- 60-test_explosions.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d20![d12,d10,d8,d6,d4]- 1- 60]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d20![d2]- 1- 22-test_explosions.csv]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d20![d2]- 1- 22]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d4 #We Rolled a dice! It was %- 1- 4]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d4 #We Rolled a dice! It was {>=2: 'a good roll', <2: 'a bad roll'}- 1- 4]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d4 #We Rolled a dice!- 1- 4]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[d4!p- 1- 10]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[if 1d4 <= 4 then keep else 5- 1- 4]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[if 1d4 <= 4 then keep else 5]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case0]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case101]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case102]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case103]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case104]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case105]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case106]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case107]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case108]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case109]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case113]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case114]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case115]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case122]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case123]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case124]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case125]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case126]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case139]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case1]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case39]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case41]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case42]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case43]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case4]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case6]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case74]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case75]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case76]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case77]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case78]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case79]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case80]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case81]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case82]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case83]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case84]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case85]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case86]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case87]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case88]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case89]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case90]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case91]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case92]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case93]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case94]": true,
  "dice_tower/tests/test_dicerolls.py::test_good_dice_rolls[test_case9]": true,
  "yacc_tests.py::test_all_rolls[(d4x2)k- \"1\"- \"4\"-False-test_groups.csv]": true,
  "yacc_tests.py::test_all_rolls[1d10- 1- 4-True-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[1d100- 1- 4-True-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[1d12- 1- 4-True-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[1d20- 1- 4-True-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[1d30- 1- 4-True-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[1d6- 1- 4-True-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[1d8- 1- 4-True-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[2d20dh- 1- 20-True-test_dropping.csv]": true,
  "yacc_tests.py::test_all_rolls[2d20dl- 1- 20-True-test_dropping.csv]": true,
  "yacc_tests.py::test_all_rolls[2d20h- 1- 20-True-test_dropping.csv]": true,
  "yacc_tests.py::test_all_rolls[2d20kh- 1- 20-True-test_dropping.csv]": true,
  "yacc_tests.py::test_all_rolls[2d20kl- 1- 20-True-test_dropping.csv]": true,
  "yacc_tests.py::test_all_rolls[2d20l- 1- 20-True-test_dropping.csv]": true,
  "yacc_tests.py::test_all_rolls[2dF2- 0- 0-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_all_rolls[4- 4-4-True-test_sided_dice.csv]": true,
  "yacc_tests.py::test_all_rolls[d4- 1- 4-False-test_simple.csv]": true,
  "yacc_tests.py::test_all_rolls[d4- 1- 4-True-test_sided_dice.csv]": true,
  "yacc_tests.py::test_all_rolls[dF--1-1-True-test_fate_dice.csv]": true,
  "yacc_tests.py::test_all_rolls[dF2- 0- 0-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[  1d4 + 1d6 - 2- 10-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[ ( 1d4 + 1d10 ) * 2- 4- 28-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[ 1d100 - 1- 100-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[#DND_LOWEST = d4; @DND_LOWEST-1-4-False-test_macros.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[#DND_LOWEST = d4; d4-1-4-False-test_macros.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[#EMPTY=d{} ; @EMPTY- -1- 1-True-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[#EMPTY=d{} ;- -1- 1-True-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[#FAILURE=d{1,1,1,1,1..20} ; @FAILURE  - -1- 1-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(1d100 + 1d100)?<50- 50- 200-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(1d100 + 1d100)?<=50- 51- 200-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(1d100 + 1d100)?>50- 2- 50-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(1d100 + 1d100)?>=50- 2- 49-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(1d4+1d10)x2- \"2:2\"- \"14:14\"-False-test_several.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(d4,2)k- \"1\"- \"4\"-False-test_groups.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(d4:d4)- \"1:1\"- \"4:4\"-True-test_sequences.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[(d4x2)k- \"1\"- \"4\"-False-test_groups.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[-1d0- 0- 0-True-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[0- 0- 0-False-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[0d- 1- 4-True-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[0d0\"- 0- 0-True-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1+(1)- 2- 2-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1+1- 2- 2-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1-d1- 0- 0-False-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[100dFcs- 0- 100-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[100dFf- 0- 100-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[100dFs- 0- 100-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[10d20cs>15- 0- 10-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[10d20f>15- 0- 10-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[10d20s>15- 0- 10-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[10dF-2dF- -- ++++++++-True-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[120s- 0- 1-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[120s>2- 0- 1-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d-1- 0- 0-True-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d0- 1- 1-True-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d1- 1- 1-False-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d10- 1- 10-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d100- 1- 100-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d100?<50- 1- 49-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d100?<=50- 1- 50-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d100?==50- 50- 50-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d100?>50- 51- 100-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d100?>=50- 50- 100-False-test_clamping.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d12- 1- 12-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d20- 1- 20-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d20ms>10- 0- 10-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d20ms>15- 0- 5-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d3+1d6 + 1d20- 3- 29-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d3+1d6+1d20- 3- 29-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4 + 1d6- 2- 10-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4*2- 2- 8-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4+----2- 3- 6-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4+-1- 0- 3-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4+-2- -1- 2-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4+1d6- 2- 10-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4+2- 3- 6-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4- 1- 4-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4-(2)- -1- 2-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4----2- 3- 6-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4-2- -1- 2-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4/2- 0- 2-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4?<3- 1-4-False-test_conditions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4?<=3- 1-4-False-test_conditions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4?==4- 1-4-False-test_conditions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4?>3- 1-4-False-test_conditions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4?>=3- 1-4-False-test_conditions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d4|2- 1- 2-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d6- 1- 6-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1d8- 1- 8-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1dF- -- +-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[1dFr- 3- 60-True-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2d20kh- 1- 20-False-test_subsets.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2d20kl- 1- 20-False-test_subsets.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2d4!- 1- 10-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2d4!p- 1- 20-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2d4+1d6- 3- 14-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2d4- 2- 8-False-test_multiple_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2d4x3dF- ----- ++++++++++++++++++++++++++++-True-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2dF x 2d4- \"--:--\"- \"++:++:++:++:++:++:++:++\"-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2dF-20dF- ++++++++++++++++++- -------------------True-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[2dFkl- '-'- '+'-False-test_subsets.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20kh3- 3- 60-False-test_subsets.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20kl2- 2- 40-False-test_subsets.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20kl4- 2- 14-True-test_subsets.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r- 3- 60-True-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r2<15- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r2==10- 3-60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r<15- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r<15cs>15- 2- 13-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r<15f>15- 2- 13-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r<15s>15- 2- 13-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r<=15- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r==1- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r==10- 3-60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r==15- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r>15- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20r>=15- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20rr<15- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20rr<16cs>15- 2- 13-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20rr<16f>15- 2- 13-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20rr<16s>15- 2- 13-False-test_count_successes.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3d20rr==10- 3- 60-False-test_rerolling.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3dF- ---- +++-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[3df!- ---- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[4d4- 4- 16-False-test_multiple_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[5d4- 5- 20-False-test_multiple_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[@POKER-9-A-False-test_macros.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[@ZODIAC-\\u2648-\\u2653-False-test_macros.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d- 0- 0-True-test_odd_inputs.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d0!- 20- 3-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d0~- 20- 3-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d1!- 20- 3-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d10+dF- ------------ +++++++++++-True-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d100!>75- 1- 2100-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d100~<75- 1- 1575-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d1:d2:d3:d4- \"1:1:1:1\"- \"1:2:3:4\"-False-test_sequences.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d1~- 20- 3-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d20![d12,d10,d8,d6,d4]- 1- 60-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d20![d2]- 1- 22-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d20%2- 1- 0-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d3!!- 20- 3-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d3!- 1- 63-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d3~- 20- 3-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d3~~- 20- 3-True-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4 x d4- 1- \"4:4:4:4\"-False-test_several.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4!p- 1- 10-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4+-d4- 0- 0-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4+d4- 2- 8-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4- 1- 4-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4- 1- 4-False-test_multiple_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4- 1- 4-False-test_single_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4:d4- \"1:1\"- \"4:4\"-False-test_sequences.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4^d4- 1- 256-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4x-1- 1- 4-True-test_several.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4x0- 1- 4-True-test_several.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4x1- 1- 4-False-test_several.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d4x2- \"1:1\"- \"4:4\"-False-test_several.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF x d4- \"-\"- \"+:+:+:+\"-False-test_several.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF!- -- +++++++++++++++++++++-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF%d3-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF%dF-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF*d3- \"-\"-+++-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF*dF- 0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF+d3-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF+dF- --- ++-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF+dF----++-False-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF- -- +-False-test_fate_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF-d3-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF-dF-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF/d3-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF/dF-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF|d3-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF|dF-0-0-True-test_arithmetic.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[dF~- ---------------------- +-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d{-1,0,1}~- -21- 1-False-test_explosions.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d{-1..1} - -1- 1-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d{1,2,2,3,3,3} - 1- 3-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d{1,2,3,4,5,6}- 1- 6-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d{1..6}- 1- 6-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d{9,10,J,Q,K,A}- 9- A-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_bad_dice_rolls[d{J,Q,K}- J- K-False-test_custom_dice.csv]": true,
  "yacc_tests.py::test_dropping[2d20dh- 1- 20-True-test_dropping]": true,
  "yacc_tests.py::test_dropping[2d20dl- 1- 20-True-test_dropping]": true,
  "yacc_tests.py::test_dropping[2d20h- 1- 20-True-test_dropping]": true,
  "yacc_tests.py::test_dropping[2d20kh- 1- 20-True-test_dropping]": true,
  "yacc_tests.py::test_dropping[2d20kl- 1- 20-True-test_dropping]": true,
  "yacc_tests.py::test_dropping[2d20l- 1- 20-True-test_dropping]": true,
  "yacc_tests.py::test_fate_dice[2dF--2-2-True-test_fate_dice]": true,
  "yacc_tests.py::test_fate_dice[dF--1-1-True-test_fate_dice]": true,
  "yacc_tests.py::test_roll": true,
  "yacc_tests.py::test_sided_dice[1d-1- 1- 1-False-test_sided_dice]": true,
  "yacc_tests.py::test_sided_dice[1d10- 1- 10-True-test_sided_dice]": true,
  "yacc_tests.py::test_sided_dice[1d100- 1- 100-True-test_sided_dice]": true,
  "yacc_tests.py::test_sided_dice[1d12- 1- 12-True-test_sided_dice]": true,
  "yacc_tests.py::test_sided_dice[1d20- 1- 20-True-test_sided_dice]": true,
  "yacc_tests.py::test_sided_dice[1d30- 1- 30-True-test_sided_dice]": true,
  "yacc_tests.py::test_sided_dice[1d6- 1- 6-True-test_sided_dice]": true,
  "yacc_tests.py::test_sided_dice[1d8- 1- 8-True-test_sided_dice]": true
}